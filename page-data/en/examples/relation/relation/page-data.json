{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-example-tsx","path":"/en/examples/relation/relation","result":{"data":{"site":{"siteMetadata":{"title":"G2","githubUrl":"https://github.com/antvis/g2","examples":[{"slug":"gallery","icon":"gallery","title":{"zh":"官方精品库","en":"Featured"}},{"slug":"interaction","icon":"interaction","title":{"zh":"交互语法","en":"Grammar of Interaction"}},{"slug":"line","icon":"line","title":{"zh":"折线图","en":"Line Chart"}},{"slug":"area","icon":"area","title":{"zh":"面积图","en":"Area Chart"}},{"slug":"column","icon":"column","title":{"zh":"柱状图","en":"Column Chart"}},{"slug":"bar","icon":"bar","title":{"zh":"条形图","en":"Bar Chart"}},{"slug":"pie","icon":"pie","title":{"zh":"饼图","en":"Pie Chart"}},{"slug":"point","icon":"point","title":{"zh":"点图","en":"Point Chart"}},{"slug":"radar","icon":"radar","title":{"zh":"雷达图","en":"Radar Chart"}},{"slug":"funnel","icon":"funnel","title":{"zh":"漏斗图","en":"Funnel Chart"}},{"slug":"heatmap","icon":"heatmap","title":{"zh":"热力图","en":"Heatmap"}},{"slug":"box","icon":"box","title":{"zh":"箱型图","en":"Box Chart"}},{"slug":"candlestick","icon":"candlestick","title":{"zh":"烛形图","en":"K Chart"}},{"slug":"gauge","icon":"gauge","title":{"zh":"仪表盘","en":"Gauges"}},{"slug":"map","icon":"map","title":{"zh":"地图","en":"Maps"}},{"slug":"facet","icon":"facet","title":{"zh":"分面","en":"Facets"}},{"slug":"relation","icon":"relation","title":{"zh":"关系图","en":"Relation Chart"}},{"slug":"component","icon":"component","title":{"zh":"组件使用","en":"Chart Components"}},{"slug":"other","icon":"other","title":{"zh":"其他图表","en":"Other Chart"}}],"playground":{"container":null,"playgroundDidMount":null,"playgroundWillUnmount":null,"dependencies":null,"htmlCodeTemplate":"<!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"UTF-8\">\n            <title>{{title}}</title>\n          </head>\n          <body>\n            <div id=\"container\" />\n            <script src=\"https://gw.alipayobjects.com/os/lib/antv/g2/4.1.0-beta.11/dist/g2.min.js\"></script>\n            <script src=\"https://gw.alipayobjects.com/os/antv/pkg/_antv.data-set-0.11.1/dist/data-set.js\"></script>\n            <script>\n            <!-- 浏览器引入，请使用全局命名空间 G2，如 new Chart() 改为 new G2.Chart，即可运行。 -->\n            {{code}}\n            </script>\n          </body>\n        </html>"}},"pathPrefix":""},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/examples/gallery"},"frontmatter":{"title":"Gallery","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery"},"frontmatter":{"title":"所有图表","order":-1,"icon":"other"},"parent":{"__typename":"File","relativePath":"gallery/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/relation/relation"},"frontmatter":{"title":"Graph","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/relation/relation"},"frontmatter":{"title":"关系图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"relation/relation/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/radar/radar"},"frontmatter":{"title":"Radar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/point/scatter"},"frontmatter":{"title":"Scatter Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/radar/radar"},"frontmatter":{"title":"雷达图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"radar/radar/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/scatter"},"frontmatter":{"title":"散点图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"point/scatter/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/pie/basic"},"frontmatter":{"title":"Basic Pie Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/pie/basic"},"frontmatter":{"title":"基础饼图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"pie/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/other/other"},"frontmatter":{"title":"Others","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/other/other"},"frontmatter":{"title":"其他图表","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"other/other/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/map/map"},"frontmatter":{"title":"Map","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/map/map"},"frontmatter":{"title":"地图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"map/map/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/basic"},"frontmatter":{"title":"基础折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/basic"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"line/basic/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/element"},"frontmatter":{"title":"Element","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/element/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/element"},"frontmatter":{"title":"图形元素","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/element/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/heatmap/basic"},"frontmatter":{"title":"色块图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heatmap/basic"},"frontmatter":{"title":"Heatmap","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/basic/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gauge/gauge"},"frontmatter":{"title":"仪表盘","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gauge/gauge"},"frontmatter":{"title":"Gauge","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gauge/gauge/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/line"},"frontmatter":{"title":"折线图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/line"},"frontmatter":{"title":"Line Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/line/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/funnel/funnel"},"frontmatter":{"title":"Funnel Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/funnel/funnel"},"frontmatter":{"title":"漏斗图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"funnel/funnel/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/facet/facet"},"frontmatter":{"title":"分面","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/facet/facet"},"frontmatter":{"title":"Facet","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"facet/facet/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/component/annotation"},"frontmatter":{"title":"Annotation","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/annotation/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/component/annotation"},"frontmatter":{"title":"Annotation","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"component/annotation/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/column/basic"},"frontmatter":{"title":"Basic Column Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/candlestick/candlestick"},"frontmatter":{"title":"K Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/candlestick/candlestick"},"frontmatter":{"title":"烛形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"candlestick/candlestick/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/column/basic"},"frontmatter":{"title":"基础柱状图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"column/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/box/box"},"frontmatter":{"title":"箱型图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/box/box"},"frontmatter":{"title":"Box Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"box/box/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/bar/basic"},"frontmatter":{"title":"基础条形图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/bar/basic"},"frontmatter":{"title":"Basic Bar Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"bar/basic/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/area/basic"},"frontmatter":{"title":"Area Chart","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/area/basic"},"frontmatter":{"title":"面积图","order":0,"icon":null},"parent":{"__typename":"File","relativePath":"area/basic/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/bubble"},"frontmatter":{"title":"气泡图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/point/bubble"},"frontmatter":{"title":"Bubble Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"point/bubble/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/pie/donut"},"frontmatter":{"title":"Donut Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/pie/donut"},"frontmatter":{"title":"环图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"pie/donut/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/step"},"frontmatter":{"title":"Step Line Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/component"},"frontmatter":{"title":"图表组件","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/component/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/component"},"frontmatter":{"title":"Components","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/component/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/heatmap/calendar"},"frontmatter":{"title":"Calendar Heatmap","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/calendar/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/heatmap/calendar"},"frontmatter":{"title":"日历热力图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/calendar/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/column"},"frontmatter":{"title":"Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/column"},"frontmatter":{"title":"柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/column/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/component/label"},"frontmatter":{"title":"Label","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"component/label/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/component/label"},"frontmatter":{"title":"Label","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"component/label/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/column/dodge"},"frontmatter":{"title":"Grouped Column Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/column/dodge"},"frontmatter":{"title":"分组柱状图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/bar/dodge"},"frontmatter":{"title":"Grouped Bar Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/bar/dodge"},"frontmatter":{"title":"分组条形图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"bar/dodge/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/area/stacked"},"frontmatter":{"title":"Stacked Area Chart","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/area/stacked"},"frontmatter":{"title":"堆叠面积图","order":1,"icon":null},"parent":{"__typename":"File","relativePath":"area/stacked/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/point/jitter"},"frontmatter":{"title":"扰动点图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"point/jitter/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/pie/rose"},"frontmatter":{"title":"Nightingale Rose Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/point/jitter"},"frontmatter":{"title":"Jitter Point Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"point/jitter/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/pie/rose"},"frontmatter":{"title":"南丁格尔玫瑰图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"pie/rose/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/step"},"frontmatter":{"title":"阶梯折线图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/step/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/path"},"frontmatter":{"title":"Path Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/path"},"frontmatter":{"title":"路径图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"line/path/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/brush"},"frontmatter":{"title":"Brush","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/brush/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/brush"},"frontmatter":{"title":"框选","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/brush/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/heatmap/heatmap"},"frontmatter":{"title":"热力图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/heatmap/heatmap"},"frontmatter":{"title":"Heatmap","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"heatmap/heatmap/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/bar"},"frontmatter":{"title":"条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/bar"},"frontmatter":{"title":"Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/bar/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/component/tooltip"},"frontmatter":{"title":"Tooltip","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"component/tooltip/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/component/tooltip"},"frontmatter":{"title":"Tooltip","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"component/tooltip/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/column/stack"},"frontmatter":{"title":"Stacked Column Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/column/stack"},"frontmatter":{"title":"堆叠柱状图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"column/stack/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/bar/stack"},"frontmatter":{"title":"堆叠条形图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/bar/stack"},"frontmatter":{"title":"Stacked Bar Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"bar/stack/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/area/range"},"frontmatter":{"title":"区间面积图","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/area/range"},"frontmatter":{"title":"Range Area Chart","order":2,"icon":null},"parent":{"__typename":"File","relativePath":"area/range/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/pie/nested"},"frontmatter":{"title":"Nested Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/pie/nested"},"frontmatter":{"title":"嵌套饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"pie/nested/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/line/multiple"},"frontmatter":{"title":"kernel smooth regression line chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/line/multiple"},"frontmatter":{"title":"核函数概率密度回归曲线","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"line/multiple/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/interaction/others"},"frontmatter":{"title":"其他","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/others/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/interaction/others"},"frontmatter":{"title":"Others","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"interaction/others/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/pie"},"frontmatter":{"title":"饼图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/pie"},"frontmatter":{"title":"Pie Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/pie/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/column/dodge-stack"},"frontmatter":{"title":"Grouped-stacked Column Chart","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge-stack/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/column/dodge-stack"},"frontmatter":{"title":"分组层叠柱状图","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"column/dodge-stack/index.zh.md"}}},{"node":{"fields":{"slug":"/zh/examples/area/streamgraph"},"frontmatter":{"title":"Streamgraph","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"area/streamgraph/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/area/streamgraph"},"frontmatter":{"title":"Streamgraph","order":3,"icon":null},"parent":{"__typename":"File","relativePath":"area/streamgraph/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/area"},"frontmatter":{"title":"面积图","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/area"},"frontmatter":{"title":"Area Chart","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/area/index.en.md"}}},{"node":{"fields":{"slug":"/en/examples/column/histogram"},"frontmatter":{"title":"Histogram","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/column/histogram"},"frontmatter":{"title":"直方图","order":4,"icon":null},"parent":{"__typename":"File","relativePath":"column/histogram/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/facet"},"frontmatter":{"title":"Facet","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/facet"},"frontmatter":{"title":"分面","order":6,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/facet/index.zh.md"}}},{"node":{"fields":{"slug":"/en/examples/gallery/dynamic"},"frontmatter":{"title":"Dynamic Charts","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/dynamic/index.en.md"}}},{"node":{"fields":{"slug":"/zh/examples/gallery/dynamic"},"frontmatter":{"title":"动态图表","order":7,"icon":null},"parent":{"__typename":"File","relativePath":"gallery/dynamic/index.zh.md"}}}]}},"pageContext":{"exampleSections":{"examples":[{"relativePath":"relation/relation/demo/treemap.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/treemap.ts","order":0,"filename":"treemap.ts","title":{"zh":"矩形树图","en":"treemap"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*Ob1jSbCUl8cAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nconst { DataView } = DataSet;\nconst data = {\n  name: 'root',\n  children: [\n    { name: '分类 1', value: 560 },\n    { name: '分类 2', value: 500 },\n    { name: '分类 3', value: 150 },\n    { name: '分类 4', value: 140 },\n    { name: '分类 5', value: 115 },\n    { name: '分类 6', value: 95 },\n    { name: '分类 7', value: 90 },\n    { name: '分类 8', value: 75 },\n    { name: '分类 9', value: 98 },\n    { name: '分类 10', value: 60 },\n    { name: '分类 11', value: 45 },\n    { name: '分类 12', value: 40 },\n    { name: '分类 13', value: 40 },\n    { name: '分类 14', value: 35 },\n    { name: '分类 15', value: 40 },\n    { name: '分类 16', value: 40 },\n    { name: '分类 17', value: 40 },\n    { name: '分类 18', value: 30 },\n    { name: '分类 19', value: 28 },\n    { name: '分类 20', value: 16 },\n  ],\n};\nconst dv = new DataView();\ndv.source(data, {\n  type: 'hierarchy',\n}).transform({\n  field: 'value',\n  type: 'hierarchy.treemap',\n  tile: 'treemapResquarify',\n  as: ['x', 'y'],\n});\n\n// 将 DataSet 处理后的结果转换为 G2 接受的数据\nconst nodes = [];\nfor (const node of dv.getAllNodes()) {\n  if (node.data.name === 'root') {\n    continue;\n  }\n  const eachNode: any = {\n    name: node.data.name,\n    x: node.x,\n    y: node.y,\n    value: node.data.value,\n  };\n\n  nodes.push(eachNode);\n}\nconst chart = new Chart({\n  container: 'container',\n  autoFit: true,\n  height: 500,\n});\nchart.data(nodes);\nchart.scale({\n  x: {\n    nice: true,\n  },\n  y: {\n    nice: true,\n  },\n});\n\nchart.axis(false);\nchart.legend(false);\nchart.tooltip({\n  showTitle: false,\n  showMarkers: false,\n  itemTpl:\n    '<li style=\"list-style: none;\">' +\n    '<span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>' +\n    '{name}<br/>' +\n    '<span style=\"padding-left: 16px\">浏览人数：{count}</span><br/>' +\n    '</li>',\n});\nchart\n  .polygon()\n  .position('x*y')\n  .color('name')\n  .tooltip('name*value', (name, count) => {\n    return {\n      name,\n      count,\n    };\n  })\n  .style({\n    lineWidth: 1,\n    stroke: '#fff'\n  })\n  .label('name', {\n    offset: 0,\n    style: {\n      textBaseline: 'middle',\n    },\n    content: (obj) => {\n      if (obj.name !== 'root') {\n        return obj.name;\n      }\n    },\n  });\nchart.interaction('element-active');\n\nchart.render();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.treemap = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var DataView = _dataSet.default.DataView;\n  var data = {\n    name: 'root',\n    children: [{\n      name: '分类 1',\n      value: 560\n    }, {\n      name: '分类 2',\n      value: 500\n    }, {\n      name: '分类 3',\n      value: 150\n    }, {\n      name: '分类 4',\n      value: 140\n    }, {\n      name: '分类 5',\n      value: 115\n    }, {\n      name: '分类 6',\n      value: 95\n    }, {\n      name: '分类 7',\n      value: 90\n    }, {\n      name: '分类 8',\n      value: 75\n    }, {\n      name: '分类 9',\n      value: 98\n    }, {\n      name: '分类 10',\n      value: 60\n    }, {\n      name: '分类 11',\n      value: 45\n    }, {\n      name: '分类 12',\n      value: 40\n    }, {\n      name: '分类 13',\n      value: 40\n    }, {\n      name: '分类 14',\n      value: 35\n    }, {\n      name: '分类 15',\n      value: 40\n    }, {\n      name: '分类 16',\n      value: 40\n    }, {\n      name: '分类 17',\n      value: 40\n    }, {\n      name: '分类 18',\n      value: 30\n    }, {\n      name: '分类 19',\n      value: 28\n    }, {\n      name: '分类 20',\n      value: 16\n    }]\n  };\n  var dv = new DataView();\n  dv.source(data, {\n    type: 'hierarchy'\n  }).transform({\n    field: 'value',\n    type: 'hierarchy.treemap',\n    tile: 'treemapResquarify',\n    as: ['x', 'y']\n  }); // 将 DataSet 处理后的结果转换为 G2 接受的数据\n\n  var nodes = [];\n\n  var _iterator = _createForOfIteratorHelper(dv.getAllNodes()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n\n      if (node.data.name === 'root') {\n        continue;\n      }\n\n      var eachNode = {\n        name: node.data.name,\n        x: node.x,\n        y: node.y,\n        value: node.data.value\n      };\n      nodes.push(eachNode);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var chart = new _g.Chart({\n    container: 'container',\n    autoFit: true,\n    height: 500\n  });\n  chart.data(nodes);\n  chart.scale({\n    x: {\n      nice: true\n    },\n    y: {\n      nice: true\n    }\n  });\n  chart.axis(false);\n  chart.legend(false);\n  chart.tooltip({\n    showTitle: false,\n    showMarkers: false,\n    itemTpl: '<li style=\"list-style: none;\">' + '<span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>' + '{name}<br/>' + '<span style=\"padding-left: 16px\">浏览人数：{count}</span><br/>' + '</li>'\n  });\n  chart.polygon().position('x*y').color('name').tooltip('name*value', function (name, count) {\n    return {\n      name: name,\n      count: count\n    };\n  }).style({\n    lineWidth: 1,\n    stroke: '#fff'\n  }).label('name', {\n    offset: 0,\n    style: {\n      textBaseline: 'middle'\n    },\n    content: function content(obj) {\n      if (obj.name !== 'root') {\n        return obj.name;\n      }\n    }\n  });\n  chart.interaction('element-active');\n  chart.render();\n});"},{"relativePath":"relation/relation/demo/treemap-children.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/treemap-children.ts","order":1,"filename":"treemap-children.ts","title":{"zh":"treemap-children","en":"treemap"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*UwprToL8UjcAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/mobile.json')\n  .then((res) => res.json())\n  .then((mobiles) => {\n    const { DataView } = DataSet;\n    // 会通过子节点累加 value 值，所以设置为 0\n    mobiles.forEach(function(mobile) {\n      mobile.value = null;\n    });\n    const data = {\n      name: 'root',\n      children: mobiles,\n    };\n    const dv = new DataView();\n    dv.source(data, {\n      type: 'hierarchy',\n    }).transform({\n      field: 'value',\n      type: 'hierarchy.treemap',\n      tile: 'treemapResquarify',\n      as: ['x', 'y'],\n    });\n    // 将 DataSet 处理后的结果转换为 G2 接受的数据\n    const nodes = [];\n    for (const node of dv.getAllNodes()) {\n      if (!node.children) {\n        const eachNode: any = {\n          name: node.data.name,\n          x: node.x,\n          y: node.y,\n          depth: node.depth,\n          value: node.value,\n        };\n        if (!node.data.brand && node.parent) {\n          eachNode.brand = node.parent.data.brand;\n        } else {\n          eachNode.brand = node.data.brand;\n        }\n\n        nodes.push(eachNode);\n      }\n    }\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 0,\n    });\n    chart.coordinate().scale(1, -1); // 习惯性最小的在最下面\n    chart.data(nodes);\n    chart.axis(false);\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart\n      .polygon()\n      .position('x*y')\n      .color('brand')\n      .tooltip('name*value', function(name, value) {\n        return {\n          name,\n          value,\n        };\n      })\n      .style({\n        lineWidth: 1,\n        stroke: '#fff',\n      })\n      .label(\n        'name',\n        {\n          offset: 0,\n          style: {\n            textBaseline: 'middle',\n            fill: '#000',\n            shadowBlur: 10,\n            shadowColor: '#fff',\n          },\n          layout: {\n            type: 'limit-in-shape'\n          }\n        }\n      );\n    chart.interaction('element-active');\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.treemapChildren = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/mobile.json').then(function (res) {\n    return res.json();\n  }).then(function (mobiles) {\n    var DataView = _dataSet.default.DataView; // 会通过子节点累加 value 值，所以设置为 0\n\n    mobiles.forEach(function (mobile) {\n      mobile.value = null;\n    });\n    var data = {\n      name: 'root',\n      children: mobiles\n    };\n    var dv = new DataView();\n    dv.source(data, {\n      type: 'hierarchy'\n    }).transform({\n      field: 'value',\n      type: 'hierarchy.treemap',\n      tile: 'treemapResquarify',\n      as: ['x', 'y']\n    }); // 将 DataSet 处理后的结果转换为 G2 接受的数据\n\n    var nodes = [];\n\n    var _iterator = _createForOfIteratorHelper(dv.getAllNodes()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var node = _step.value;\n\n        if (!node.children) {\n          var eachNode = {\n            name: node.data.name,\n            x: node.x,\n            y: node.y,\n            depth: node.depth,\n            value: node.value\n          };\n\n          if (!node.data.brand && node.parent) {\n            eachNode.brand = node.parent.data.brand;\n          } else {\n            eachNode.brand = node.data.brand;\n          }\n\n          nodes.push(eachNode);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 0\n    });\n    chart.coordinate().scale(1, -1); // 习惯性最小的在最下面\n\n    chart.data(nodes);\n    chart.axis(false);\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.polygon().position('x*y').color('brand').tooltip('name*value', function (name, value) {\n      return {\n        name: name,\n        value: value\n      };\n    }).style({\n      lineWidth: 1,\n      stroke: '#fff'\n    }).label('name', {\n      offset: 0,\n      style: {\n        textBaseline: 'middle',\n        fill: '#000',\n        shadowBlur: 10,\n        shadowColor: '#fff'\n      },\n      layout: {\n        type: 'limit-in-shape'\n      }\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/polar-treemap.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/polar-treemap.ts","order":2,"filename":"polar-treemap.ts","title":{"zh":"极坐标系下的矩形树图","en":"polar treemap"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*MNDYS59mjpYAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/mobile.json')\n  .then((res) => res.json())\n  .then((mobiles) => {\n    const { DataView } = DataSet;\n\n    // 会通过子节点累加 value 值，所以设置为 0\n    mobiles.forEach(function(mobile) {\n      mobile.value = null;\n    });\n    const data = {\n      name: 'root',\n      children: mobiles,\n    };\n    const dv = new DataView();\n    dv.source(data, {\n      type: 'hierarchy',\n    }).transform({\n      field: 'value',\n      type: 'hierarchy.treemap',\n      tile: 'treemapResquarify',\n      as: ['x', 'y'],\n    });\n    // 将 DataSet 处理后的结果转换为 G2 接受的数据\n    const nodes = [];\n    for (const node of dv.getAllNodes()) {\n      if (!node.children || node.children.length > 1) {\n        const eachNode: any = {\n          name: node.data.name,\n          x: node.x,\n          y: node.y,\n          depth: node.depth,\n          value: node.value,\n        };\n        if (!node.data.brand && node.parent) {\n          eachNode.brand = node.parent.data.brand;\n        } else {\n          eachNode.brand = node.data.brand;\n        }\n\n        nodes.push(eachNode);\n      }\n    }\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n    });\n    chart.coordinate('polar').reflect('y'); // 习惯性最小的在最下面\n    chart.data(nodes);\n    chart.axis(false);\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart\n      .polygon()\n      .position('x*y')\n      .color('brand')\n      .tooltip('name*value', function(name, value) {\n        return {\n          name,\n          value,\n        };\n      })\n      .style({\n        lineWidth: 1,\n        stroke: '#fff',\n      })\n      .label(\n        'brand*depth*value',\n        function(brand, depth, value) {\n          if (depth === 1 && value > 1) {\n            // 只有第一级显示文本，数值太小时不显示文本\n            return {\n              content: brand,\n            };\n          }\n        },\n        {\n          offset: 0,\n          style: {\n            textBaseline: 'middle',\n            fill: '#000',\n            shadowBlur: 10,\n            shadowColor: '#fff',\n          },\n          content: (obj) => {\n            if (obj.name !== 'root') {\n              return obj.name;\n            }\n          },\n        }\n      );\n    chart.interaction('element-active');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.polarTreemap = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/mobile.json').then(function (res) {\n    return res.json();\n  }).then(function (mobiles) {\n    var DataView = _dataSet.default.DataView; // 会通过子节点累加 value 值，所以设置为 0\n\n    mobiles.forEach(function (mobile) {\n      mobile.value = null;\n    });\n    var data = {\n      name: 'root',\n      children: mobiles\n    };\n    var dv = new DataView();\n    dv.source(data, {\n      type: 'hierarchy'\n    }).transform({\n      field: 'value',\n      type: 'hierarchy.treemap',\n      tile: 'treemapResquarify',\n      as: ['x', 'y']\n    }); // 将 DataSet 处理后的结果转换为 G2 接受的数据\n\n    var nodes = [];\n\n    var _iterator = _createForOfIteratorHelper(dv.getAllNodes()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var node = _step.value;\n\n        if (!node.children || node.children.length > 1) {\n          var eachNode = {\n            name: node.data.name,\n            x: node.x,\n            y: node.y,\n            depth: node.depth,\n            value: node.value\n          };\n\n          if (!node.data.brand && node.parent) {\n            eachNode.brand = node.parent.data.brand;\n          } else {\n            eachNode.brand = node.data.brand;\n          }\n\n          nodes.push(eachNode);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.coordinate('polar').reflect('y'); // 习惯性最小的在最下面\n\n    chart.data(nodes);\n    chart.axis(false);\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.polygon().position('x*y').color('brand').tooltip('name*value', function (name, value) {\n      return {\n        name: name,\n        value: value\n      };\n    }).style({\n      lineWidth: 1,\n      stroke: '#fff'\n    }).label('brand*depth*value', function (brand, depth, value) {\n      if (depth === 1 && value > 1) {\n        // 只有第一级显示文本，数值太小时不显示文本\n        return {\n          content: brand\n        };\n      }\n    }, {\n      offset: 0,\n      style: {\n        textBaseline: 'middle',\n        fill: '#000',\n        shadowBlur: 10,\n        shadowColor: '#fff'\n      },\n      content: function content(obj) {\n        if (obj.name !== 'root') {\n          return obj.name;\n        }\n      }\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/adjacency.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/adjacency.ts","order":3,"filename":"adjacency.ts","title":{"zh":"相邻层次图","en":"adjacency"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*JPxWR6c4ZQYAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/flare.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const ds = new DataSet();\n    const dv = ds.createView().source(data, {\n      type: 'hierarchy',\n    });\n    dv.transform({\n      type: 'hierarchy.partition',\n    });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 0,\n    });\n    chart.data(\n      dv.getAllNodes().map((node) => ({\n        name: node.data.name,\n        value: node.value,\n        depth: node.depth,\n        x: node.x,\n        y: node.y,\n      }))\n    );\n    chart.scale({\n      x: { nice: true },\n      y: { nice: true },\n    });\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false,\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart\n      .polygon()\n      .position('x*y')\n      .color('name');\n    chart.interaction('element-active');\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.adjacency = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/flare.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new _dataSet.default();\n    var dv = ds.createView().source(data, {\n      type: 'hierarchy'\n    });\n    dv.transform({\n      type: 'hierarchy.partition'\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 0\n    });\n    chart.data(dv.getAllNodes().map(function (node) {\n      return {\n        name: node.data.name,\n        value: node.value,\n        depth: node.depth,\n        x: node.x,\n        y: node.y\n      };\n    }));\n    chart.scale({\n      x: {\n        nice: true\n      },\n      y: {\n        nice: true\n      }\n    });\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.polygon().position('x*y').color('name');\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/sunburst.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/sunburst.ts","order":4,"filename":"sunburst.ts","title":{"zh":"旭日图","en":"sunburst chart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*UbXJTZ9weikAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/sunburst.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const { DataView } = DataSet;\n    const dv = new DataView();\n    dv.source(data, {\n      type: 'hierarchy',\n    }).transform({\n      type: 'hierarchy.partition', // 根据树形数据生成相邻层次图 Adjacency Diagram 布局\n      field: 'sum',\n      as: ['x', 'y'],\n    });\n    const source = [];\n    const nodes = dv.getAllNodes();\n    nodes.map((node) => {\n      if (node.depth === 0) {\n        // 父节点不展示\n        return null;\n      }\n      const obj = {};\n      obj.label = node.data.label;\n      obj.sum = node.data.sum;\n      obj.uv = node.data.uv;\n      obj.value = node.value;\n      obj.x = node.x;\n      obj.y = node.y;\n      source.push(obj);\n      return node;\n    });\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n    });\n    chart.data(source);\n    chart.scale({\n      x: {\n        nice: true,\n      },\n      y: {\n        nice: true,\n      },\n    });\n\n    chart.coordinate('polar', {\n      innerRadius: 0.3,\n    });\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false,\n    });\n    chart.axis(false);\n    chart.legend(false);\n\n    chart\n      .polygon()\n      .position('x*y')\n      .color('value', '#BAE7FF-#1890FF-#0050B3')\n      .style({\n        stroke: '#FFF',\n        lineWidth: 1,\n      })\n      .tooltip('label*sum');\n\n    chart.interaction('element-active');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.sunburst = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/sunburst.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var DataView = _dataSet.default.DataView;\n    var dv = new DataView();\n    dv.source(data, {\n      type: 'hierarchy'\n    }).transform({\n      type: 'hierarchy.partition',\n      // 根据树形数据生成相邻层次图 Adjacency Diagram 布局\n      field: 'sum',\n      as: ['x', 'y']\n    });\n    var source = [];\n    var nodes = dv.getAllNodes();\n    nodes.map(function (node) {\n      if (node.depth === 0) {\n        // 父节点不展示\n        return null;\n      }\n\n      var obj = {};\n      obj.label = node.data.label;\n      obj.sum = node.data.sum;\n      obj.uv = node.data.uv;\n      obj.value = node.value;\n      obj.x = node.x;\n      obj.y = node.y;\n      source.push(obj);\n      return node;\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.data(source);\n    chart.scale({\n      x: {\n        nice: true\n      },\n      y: {\n        nice: true\n      }\n    });\n    chart.coordinate('polar', {\n      innerRadius: 0.3\n    });\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.polygon().position('x*y').color('value', '#BAE7FF-#1890FF-#0050B3').style({\n      stroke: '#FFF',\n      lineWidth: 1\n    }).tooltip('label*sum');\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/arc-polar.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/arc-polar.ts","order":5,"filename":"arc-polar.ts","title":{"zh":"极坐标弧长链接图","en":"polar arc diagram"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*rpDZRocqrwEAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nconst colors = [\n  '#1890FF',\n  '#2FC25B',\n  '#FACC14',\n  '#223273',\n  '#8543E0',\n  '#13C2C2',\n  '#3436C7',\n  '#F04864'\n];\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relationship-with-weight.json')\n  .then(res => res.json())\n  .then(data => {\n    // arc diagram layout\n    const ds = new DataSet();\n    const dv = ds.createView().source(data, {\n      type: 'graph',\n      edges: d => d.links\n    });\n    dv.transform({\n      type: 'diagram.arc',\n      marginRatio: 0.5\n    });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 50,\n    });\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.scale({\n      x: {\n        nice: true,\n        sync: true,\n      },\n      y: {\n        nice: true,\n        sync: true,\n      },\n    });\n\n    const edgeView = chart.createView();\n    edgeView.coordinate('polar').reflect('y');\n    edgeView.data(dv.edges);\n    edgeView.axis(false);\n    edgeView.edge()\n      .position('x*y')\n      .shape('arc')\n      .color('source', colors)\n      .tooltip('source*target')\n      .style({\n        opacity: 0.3\n      });\n\n    const nodeView = chart.createView();\n    nodeView.coordinate('polar').reflect('y');\n    nodeView.data(dv.nodes);\n    nodeView.axis(false);\n    nodeView.point()\n      .position('x*y')\n      .shape('circle')\n      .size('value')\n      .color('id', colors)\n      .style({\n        stroke: 'grey',\n      })\n      .label('name', {\n        labelEmit: true\n      });\n\n    chart.interaction('element-active');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.arcPolar = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var colors = ['#1890FF', '#2FC25B', '#FACC14', '#223273', '#8543E0', '#13C2C2', '#3436C7', '#F04864'];\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relationship-with-weight.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    // arc diagram layout\n    var ds = new _dataSet.default();\n    var dv = ds.createView().source(data, {\n      type: 'graph',\n      edges: function edges(d) {\n        return d.links;\n      }\n    });\n    dv.transform({\n      type: 'diagram.arc',\n      marginRatio: 0.5\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 50\n    });\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.scale({\n      x: {\n        nice: true,\n        sync: true\n      },\n      y: {\n        nice: true,\n        sync: true\n      }\n    });\n    var edgeView = chart.createView();\n    edgeView.coordinate('polar').reflect('y');\n    edgeView.data(dv.edges);\n    edgeView.axis(false);\n    edgeView.edge().position('x*y').shape('arc').color('source', colors).tooltip('source*target').style({\n      opacity: 0.3\n    });\n    var nodeView = chart.createView();\n    nodeView.coordinate('polar').reflect('y');\n    nodeView.data(dv.nodes);\n    nodeView.axis(false);\n    nodeView.point().position('x*y').shape('circle').size('value').color('id', colors).style({\n      stroke: 'grey'\n    }).label('name', {\n      labelEmit: true\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/arc.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/arc.ts","order":6,"filename":"arc.ts","title":{"zh":"弧长链接图","en":"arc diagram"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*NC7zTY088hEAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relationship-with-weight.json')\n  .then(res => res.json())\n  .then(data => {\n    // arc diagram layout\n    const ds = new DataSet();\n    const dv = ds.createView().source(data, {\n      type: 'graph',\n      edges: d => d.links\n    });\n    dv.transform({\n      type: 'diagram.arc',\n      marginRatio: 0.5\n    });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: [20, 20, 95],\n    });\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false,\n    });\n    chart.scale({\n      x: {\n        sync: true,\n        nice: true,\n      },\n      y: {\n        sync: true,\n        nice: true,\n        max: 1,\n      }\n    });\n\n    const edgeView = chart.createView();\n    edgeView.data(dv.edges);\n    edgeView.axis(false);\n    edgeView.edge()\n      .position('x*y')\n      .shape('arc')\n      .color('source')\n      .tooltip('source*target');\n\n    const nodeView = chart.createView();\n    nodeView.data(dv.nodes);\n    nodeView.axis(false);\n    nodeView.point()\n      .position('x*y')\n      .shape('circle')\n      .size('value')\n      .color('id')\n      .style({\n        stroke: 'grey'\n      })\n      .label('name', { // label configuration for non-polar coord\n        offset: -10,\n        style: {\n          textAlign: 'left',\n        },\n        rotate: Math.PI / 2,\n      });\n    chart.interaction('element-active');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.arc = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relationship-with-weight.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    // arc diagram layout\n    var ds = new _dataSet.default();\n    var dv = ds.createView().source(data, {\n      type: 'graph',\n      edges: function edges(d) {\n        return d.links;\n      }\n    });\n    dv.transform({\n      type: 'diagram.arc',\n      marginRatio: 0.5\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: [20, 20, 95]\n    });\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.scale({\n      x: {\n        sync: true,\n        nice: true\n      },\n      y: {\n        sync: true,\n        nice: true,\n        max: 1\n      }\n    });\n    var edgeView = chart.createView();\n    edgeView.data(dv.edges);\n    edgeView.axis(false);\n    edgeView.edge().position('x*y').shape('arc').color('source').tooltip('source*target');\n    var nodeView = chart.createView();\n    nodeView.data(dv.nodes);\n    nodeView.axis(false);\n    nodeView.point().position('x*y').shape('circle').size('value').color('id').style({\n      stroke: 'grey'\n    }).label('name', {\n      // label configuration for non-polar coord\n      offset: -10,\n      style: {\n        textAlign: 'left'\n      },\n      rotate: Math.PI / 2\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/chord.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/chord.ts","order":7,"filename":"chord.ts","title":{"zh":"和弦图","en":"chord diagram"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*CfT4RZawGIUAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relationship-with-weight.json')\n  .then(res => res.json())\n  .then(data => {\n    const ds = new DataSet();\n    const dv = ds.createView().source(data, {\n      type: 'graph',\n      edges: d => d.links\n    });\n    dv.transform({\n      type: 'diagram.arc',\n      sourceWeight: e => e.sourceWeight,\n      targetWeight: e => e.targetWeight,\n      weight: true,\n      marginRatio: 0.3\n    });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 30,\n    });\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false,\n    });\n    chart.scale({\n      x: {\n        sync: true,\n        nice: true,\n      },\n      y: {\n        sync: true,\n        nice: true,\n        max: 1,\n      }\n    });\n\n    const edgeView = chart.createView();\n    edgeView.data(dv.edges);\n    edgeView.coordinate('polar').reflect('y');\n    edgeView.axis(false);\n    edgeView.edge()\n      .position('x*y')\n      .shape('arc')\n      .color('source')\n      .tooltip('source*target*value')\n      .style({\n        fillOpacity: 0.5\n      });\n\n    const nodeView = chart.createView();\n    nodeView.data(dv.nodes);\n    nodeView.coordinate('polar').reflect('y');\n    nodeView.axis(false);\n    nodeView.polygon()\n      .position('x*y')\n      .color('id')\n      .label('name', {\n        labelEmit: true,\n        style: {\n          fill: '#8c8c8c',\n        },\n      })\n      .style({\n        fillOpacity: 0.5\n      });\n    chart.interaction('element-active');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.chord = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relationship-with-weight.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new _dataSet.default();\n    var dv = ds.createView().source(data, {\n      type: 'graph',\n      edges: function edges(d) {\n        return d.links;\n      }\n    });\n    dv.transform({\n      type: 'diagram.arc',\n      sourceWeight: function sourceWeight(e) {\n        return e.sourceWeight;\n      },\n      targetWeight: function targetWeight(e) {\n        return e.targetWeight;\n      },\n      weight: true,\n      marginRatio: 0.3\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: 30\n    });\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.scale({\n      x: {\n        sync: true,\n        nice: true\n      },\n      y: {\n        sync: true,\n        nice: true,\n        max: 1\n      }\n    });\n    var edgeView = chart.createView();\n    edgeView.data(dv.edges);\n    edgeView.coordinate('polar').reflect('y');\n    edgeView.axis(false);\n    edgeView.edge().position('x*y').shape('arc').color('source').tooltip('source*target*value').style({\n      fillOpacity: 0.5\n    });\n    var nodeView = chart.createView();\n    nodeView.data(dv.nodes);\n    nodeView.coordinate('polar').reflect('y');\n    nodeView.axis(false);\n    nodeView.polygon().position('x*y').color('id').label('name', {\n      labelEmit: true,\n      style: {\n        fill: '#8c8c8c'\n      }\n    }).style({\n      fillOpacity: 0.5\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/radial-dendrogram.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/radial-dendrogram.ts","order":8,"filename":"radial-dendrogram.ts","title":{"zh":"径向系统树图","en":"radial tree"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*umLuSZdAjxkAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/flare.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data, {\n      type: 'hierarchy'\n    });\n    dv.transform({\n      type: 'hierarchy.cluster'\n    });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: [60, 0, 40, 0]\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.coordinate('polar');\n    chart.scale({\n      x: {\n        nice: true,\n        sync: true,\n      },\n      y: {\n        nice: true,\n        sync: true,\n      },\n    });\n\n    const edgeView = chart.createView();\n    edgeView.data(dv.getAllLinks().map(link => ({\n      x: [link.source.x, link.target.x],\n      y: [link.source.y, link.target.y],\n      source: link.source.id,\n      target: link.target.id\n    })));\n    edgeView.edge()\n      .position('x*y')\n      .shape('smooth') // vhv\n      .color('grey')\n      .tooltip('source*target')\n      .style({\n        strokeOpacity: 0.5,\n      });\n\n    const nodeView = chart.createView();\n    nodeView.data(dv.getAllNodes().map(node => ({\n      hasChildren: !!(node.data.children && node.data.children.length),\n      name: node.data.name,\n      value: node.value,\n      depth: node.depth,\n      x: node.x,\n      y: node.y\n    })));\n    nodeView.point()\n      .position('x*y')\n      .color('hasChildren')\n      .label('name', {\n        offset: 5,\n        labelEmit: true,\n        style:  {\n          fill: 'grey',\n          fontSize: 9,\n        }\n      });\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.radialDendrogram = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/flare.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new _dataSet.default.View().source(data, {\n      type: 'hierarchy'\n    });\n    dv.transform({\n      type: 'hierarchy.cluster'\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: [60, 0, 40, 0]\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.coordinate('polar');\n    chart.scale({\n      x: {\n        nice: true,\n        sync: true\n      },\n      y: {\n        nice: true,\n        sync: true\n      }\n    });\n    var edgeView = chart.createView();\n    edgeView.data(dv.getAllLinks().map(function (link) {\n      return {\n        x: [link.source.x, link.target.x],\n        y: [link.source.y, link.target.y],\n        source: link.source.id,\n        target: link.target.id\n      };\n    }));\n    edgeView.edge().position('x*y').shape('smooth') // vhv\n    .color('grey').tooltip('source*target').style({\n      strokeOpacity: 0.5\n    });\n    var nodeView = chart.createView();\n    nodeView.data(dv.getAllNodes().map(function (node) {\n      return {\n        hasChildren: !!(node.data.children && node.data.children.length),\n        name: node.data.name,\n        value: node.value,\n        depth: node.depth,\n        x: node.x,\n        y: node.y\n      };\n    }));\n    nodeView.point().position('x*y').color('hasChildren').label('name', {\n      offset: 5,\n      labelEmit: true,\n      style: {\n        fill: 'grey',\n        fontSize: 9\n      }\n    });\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/radial-tidy-tree.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/radial-tidy-tree.ts","order":9,"filename":"radial-tidy-tree.ts","title":{"zh":"径向紧凑树图","en":"radial tidy tree"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*10Y4TrCRUwQAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/flare.json')\n  .then(res => res.json())\n  .then(data => {\n    const dv = new DataSet.View().source(data, {\n      type: 'hierarchy'\n    });\n    dv.transform({\n      type: 'hierarchy.tree'\n    });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: [50, 0, 20, 0]\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.coordinate('polar');\n    chart.scale({\n      x: {\n        nice: true,\n        sync: true,\n      },\n      y: {\n        nice: true,\n        sync: true,\n      },\n    });\n\n    const edgeView = chart.createView();\n    edgeView.data(dv.getAllLinks().map(link => ({\n      x: [link.source.x, link.target.x],\n      y: [link.source.y, link.target.y],\n      source: link.source.id,\n      target: link.target.id\n    })));\n    edgeView.edge()\n      .position('x*y')\n      .shape('smooth') // vhv\n      .color('grey')\n      .tooltip('source*target')\n      .style({\n        strokeOpacity: 0.5,\n      });\n\n    const nodeView = chart.createView();\n    nodeView.data(dv.getAllNodes().map(node => ({\n      hasChildren: !!(node.data.children && node.data.children.length),\n      name: node.data.name,\n      value: node.value,\n      depth: node.depth,\n      x: node.x,\n      y: node.y\n    })));\n    nodeView.point()\n      .position('x*y')\n      .color('hasChildren')\n      .label('name', {\n        offset: 0,\n        labelEmit: true,\n        style: {\n          fill: 'grey',\n          fontSize: 9,\n        }\n      });\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.radialTidyTree = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/flare.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new _dataSet.default.View().source(data, {\n      type: 'hierarchy'\n    });\n    dv.transform({\n      type: 'hierarchy.tree'\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: [50, 0, 20, 0]\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.coordinate('polar');\n    chart.scale({\n      x: {\n        nice: true,\n        sync: true\n      },\n      y: {\n        nice: true,\n        sync: true\n      }\n    });\n    var edgeView = chart.createView();\n    edgeView.data(dv.getAllLinks().map(function (link) {\n      return {\n        x: [link.source.x, link.target.x],\n        y: [link.source.y, link.target.y],\n        source: link.source.id,\n        target: link.target.id\n      };\n    }));\n    edgeView.edge().position('x*y').shape('smooth') // vhv\n    .color('grey').tooltip('source*target').style({\n      strokeOpacity: 0.5\n    });\n    var nodeView = chart.createView();\n    nodeView.data(dv.getAllNodes().map(function (node) {\n      return {\n        hasChildren: !!(node.data.children && node.data.children.length),\n        name: node.data.name,\n        value: node.value,\n        depth: node.depth,\n        x: node.x,\n        y: node.y\n      };\n    }));\n    nodeView.point().position('x*y').color('hasChildren').label('name', {\n      offset: 0,\n      labelEmit: true,\n      style: {\n        fill: 'grey',\n        fontSize: 9\n      }\n    });\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/sankey.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/sankey.ts","order":10,"filename":"sankey.ts","title":{"zh":"桑基图","en":"sankey diagram"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*aej1T7ZW_jkAAAAAAAAAAABkARQnAQ","source":"// FIX: dataset 数据处理\nimport DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/energy.json')\n  .then(res => res.json())\n  .then(data => {\n    // arc diagram layout\n    const ds = new DataSet();\n    const dv = ds.createView().source(data, {\n      type: 'graph',\n      edges: d => d.links\n    });\n    dv.transform({\n      type: 'diagram.sankey',\n      sort: (a, b) => {\n        if (a.value > b.value) {\n          return 0\n        } else if (a.value < b.value) {\n          return -1\n        }\n        return 0\n      }\n    });\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: [40, 80]\n    });\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.axis(false);\n    chart.scale({\n      x: { sync: true, nice: true },\n      y: { sync: true, nice: true }\n    });\n\n    // edge view\n    const edges = dv.edges.map((edge) => {\n      return {\n        source: edge.source.name,\n        target: edge.target.name,\n        x: edge.x,\n        y: edge.y,\n        value: edge.value,\n      };\n    });\n    const edgeView = chart.createView();\n    edgeView.data(edges);\n    edgeView.edge()\n      .position('x*y')\n      .shape('arc')\n      .color('#bbb')\n      .tooltip('target*source*value', (target, source, value) => {\n        return {\n          name: source + ' to ' + target + '</span>',\n          value\n        };\n      })\n      .style({\n        fillOpacity: 0.6,\n      });\n\n    // node view\n    const nodes = dv.nodes.map((node) => {\n      return {\n        x: node.x,\n        y: node.y,\n        name: node.name,\n      };\n    });\n    const nodeView = chart.createView();\n    nodeView.data(nodes);\n    nodeView.polygon()\n      .position('x*y') // nodes数据的x、y由layout方法计算得出\n      .color('name')\n      .label('name', {\n        style: {\n          fill: '#545454',\n          textAlign: 'start'\n        },\n        offset: 0,\n        content: (obj) => {\n          return '  ' + obj.name;\n        }\n      })\n      .tooltip(false)\n      .style({\n        stroke: '#ccc'\n      });\n\n    chart.interaction('element-active');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.sankey = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  // FIX: dataset 数据处理\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/energy.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    // arc diagram layout\n    var ds = new _dataSet.default();\n    var dv = ds.createView().source(data, {\n      type: 'graph',\n      edges: function edges(d) {\n        return d.links;\n      }\n    });\n    dv.transform({\n      type: 'diagram.sankey',\n      sort: function sort(a, b) {\n        if (a.value > b.value) {\n          return 0;\n        } else if (a.value < b.value) {\n          return -1;\n        }\n\n        return 0;\n      }\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n      padding: [40, 80]\n    });\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.axis(false);\n    chart.scale({\n      x: {\n        sync: true,\n        nice: true\n      },\n      y: {\n        sync: true,\n        nice: true\n      }\n    }); // edge view\n\n    var edges = dv.edges.map(function (edge) {\n      return {\n        source: edge.source.name,\n        target: edge.target.name,\n        x: edge.x,\n        y: edge.y,\n        value: edge.value\n      };\n    });\n    var edgeView = chart.createView();\n    edgeView.data(edges);\n    edgeView.edge().position('x*y').shape('arc').color('#bbb').tooltip('target*source*value', function (target, source, value) {\n      return {\n        name: source + ' to ' + target + '</span>',\n        value: value\n      };\n    }).style({\n      fillOpacity: 0.6\n    }); // node view\n\n    var nodes = dv.nodes.map(function (node) {\n      return {\n        x: node.x,\n        y: node.y,\n        name: node.name\n      };\n    });\n    var nodeView = chart.createView();\n    nodeView.data(nodes);\n    nodeView.polygon().position('x*y') // nodes数据的x、y由layout方法计算得出\n    .color('name').label('name', {\n      style: {\n        fill: '#545454',\n        textAlign: 'start'\n      },\n      offset: 0,\n      content: function content(obj) {\n        return '  ' + obj.name;\n      }\n    }).tooltip(false).style({\n      stroke: '#ccc'\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/voronoi.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/voronoi.ts","order":11,"filename":"voronoi.ts","title":{"zh":"voronoi 图","en":"voronoi"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*OFNjQpgsskgAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/voronoi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const ds = new DataSet();\n    const dv = ds.createView().source(data);\n    dv.transform({\n      type: 'diagram.voronoi',\n      fields: ['x', 'y'],\n      size: [800, 600],\n      as: ['_x', '_y'],\n    });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false,\n    });\n\n    chart.data(dv.rows);\n    chart.scale({\n      _x: {\n        nice: true,\n      },\n      _y: {\n        nice: true,\n      },\n    });\n\n    chart\n      .polygon()\n      .position('_x*_y')\n      .color('value')\n      .label('value', {\n        offset: 0,\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAlign: 'center',\n          shadowBlur: 2,\n          shadowColor: 'rgba(0, 0, 0, .45)',\n        },\n      });\n    chart.interaction('element-active');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.voronoi = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/voronoi.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new _dataSet.default();\n    var dv = ds.createView().source(data);\n    dv.transform({\n      type: 'diagram.voronoi',\n      fields: ['x', 'y'],\n      size: [800, 600],\n      as: ['_x', '_y']\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.data(dv.rows);\n    chart.scale({\n      _x: {\n        nice: true\n      },\n      _y: {\n        nice: true\n      }\n    });\n    chart.polygon().position('_x*_y').color('value').label('value', {\n      offset: 0,\n      style: {\n        fill: '#fff',\n        fontSize: 12,\n        textAlign: 'center',\n        shadowBlur: 2,\n        shadowColor: 'rgba(0, 0, 0, .45)'\n      }\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/voronoi-polar.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/voronoi-polar.ts","order":12,"filename":"voronoi-polar.ts","title":{"zh":"极坐标 voronoi 图","en":"polar voronoi"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*gIuyQpVgYssAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/voronoi.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const ds = new DataSet();\n    const dv = ds.createView().source(data);\n    dv.transform({\n      type: 'diagram.voronoi',\n      fields: ['x', 'y'],\n      size: [800, 600],\n      as: ['_x', '_y'],\n    });\n\n    const chart = new Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500,\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.coordinate('polar');\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false,\n    });\n\n    chart.data(dv.rows);\n    chart.scale({\n      _x: {\n        nice: true,\n      },\n      _y: {\n        nice: true,\n      },\n    });\n\n    chart\n      .polygon()\n      .position('_x*_y')\n      .color('value')\n      .label('value', {\n        offset: 0,\n        style: {\n          fill: '#fff',\n          fontSize: 12,\n          textAlign: 'center',\n          shadowBlur: 2,\n          shadowColor: 'rgba(0, 0, 0, .45)',\n        },\n        layout: {\n          type: 'limit-in-shape',\n        },\n      });\n    chart.interaction('element-active');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.voronoiPolar = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/voronoi.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var ds = new _dataSet.default();\n    var dv = ds.createView().source(data);\n    dv.transform({\n      type: 'diagram.voronoi',\n      fields: ['x', 'y'],\n      size: [800, 600],\n      as: ['_x', '_y']\n    });\n    var chart = new _g.Chart({\n      container: 'container',\n      autoFit: true,\n      height: 500\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.coordinate('polar');\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    chart.data(dv.rows);\n    chart.scale({\n      _x: {\n        nice: true\n      },\n      _y: {\n        nice: true\n      }\n    });\n    chart.polygon().position('_x*_y').color('value').label('value', {\n      offset: 0,\n      style: {\n        fill: '#fff',\n        fontSize: 12,\n        textAlign: 'center',\n        shadowBlur: 2,\n        shadowColor: 'rgba(0, 0, 0, .45)'\n      },\n      layout: {\n        type: 'limit-in-shape'\n      }\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"},{"relativePath":"relation/relation/demo/circle-packing.ts","absolutePath":"/Users/yuxi/Desktop/AntV/G2/examples/relation/relation/demo/circle-packing.ts","order":13,"filename":"circle-packing.ts","title":{"zh":"Circle Packing","en":"circle packing"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_f5c722/afts/img/A*47DsSZq3DsYAAAAAAAAAAABkARQnAQ","source":"import DataSet from '@antv/data-set';\nimport { Chart } from '@antv/g2';\n\nfetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/flare.json')\n  .then((res) => res.json())\n  .then((data) => {\n    const dv = new DataSet.View().source(data, {\n      type: 'hierarchy',\n    });\n    dv.transform({\n      type: 'hierarchy.circle-packing',\n    });\n    const diameter = Math.min(window.innerWidth, 500);\n\n    const chart = new Chart({\n      container: 'container',\n      height: diameter,\n      width: diameter,\n      padding: 0,\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false,\n    });\n\n    const nodes = dv.getAllNodes().map((node) => ({\n      hasChildren: !!(node.data.children && node.data.children.length),\n      name: node.data.name.split(/(?=[A-Z][^A-Z])/g).join('\\n'),\n      value: node.value,\n      depth: node.depth,\n      x: node.x,\n      y: node.y,\n      r: node.r,\n    }));\n\n    chart.data(nodes);\n    chart.scale({\n      x: { nice: true },\n      y: { nice: true },\n    });\n    chart\n      .point()\n      .position('x*y')\n      .color('hasChildren')\n      .shape('circle')\n      .tooltip('name')\n      .size('r', (r) => r * diameter)\n      .color('r', 'rgb(252, 253, 191)-rgb(231, 82, 99)-rgb(183, 55, 121)')\n      .style({\n        stroke: 'rgb(183, 55, 121)',\n      })\n      .label('name', {\n        offset: 0,\n        style: {\n          textBaseline: 'middle',\n          fill: 'grey',\n          fontSize: 9,\n          textAlign: 'center',\n        },\n        layout: {\n          type: 'fixed-overlap',\n        },\n      });\n    chart.interaction('element-active');\n\n    chart.render();\n  });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/data-set\", \"@antv/g2\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/data-set\"), require(\"@antv/g2\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dataSet, global.g2);\n    global.circlePacking = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dataSet, _g) {\n  \"use strict\";\n\n  _dataSet = _interopRequireDefault(_dataSet);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/flare.json').then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    var dv = new _dataSet.default.View().source(data, {\n      type: 'hierarchy'\n    });\n    dv.transform({\n      type: 'hierarchy.circle-packing'\n    });\n    var diameter = Math.min(window.innerWidth, 500);\n    var chart = new _g.Chart({\n      container: 'container',\n      height: diameter,\n      width: diameter,\n      padding: 0\n    });\n    chart.axis(false);\n    chart.legend(false);\n    chart.tooltip({\n      showTitle: false,\n      showMarkers: false\n    });\n    var nodes = dv.getAllNodes().map(function (node) {\n      return {\n        hasChildren: !!(node.data.children && node.data.children.length),\n        name: node.data.name.split(/(?=[A-Z][^A-Z])/g).join('\\n'),\n        value: node.value,\n        depth: node.depth,\n        x: node.x,\n        y: node.y,\n        r: node.r\n      };\n    });\n    chart.data(nodes);\n    chart.scale({\n      x: {\n        nice: true\n      },\n      y: {\n        nice: true\n      }\n    });\n    chart.point().position('x*y').color('hasChildren').shape('circle').tooltip('name').size('r', function (r) {\n      return r * diameter;\n    }).color('r', 'rgb(252, 253, 191)-rgb(231, 82, 99)-rgb(183, 55, 121)').style({\n      stroke: 'rgb(183, 55, 121)'\n    }).label('name', {\n      offset: 0,\n      style: {\n        textBaseline: 'middle',\n        fill: 'grey',\n        fontSize: 9,\n        textAlign: 'center'\n      },\n      layout: {\n        type: 'fixed-overlap'\n      }\n    });\n    chart.interaction('element-active');\n    chart.render();\n  });\n});"}]},"description":""}},"staticQueryHashes":["1015175297","3000541721","3000541721","653731124"]}